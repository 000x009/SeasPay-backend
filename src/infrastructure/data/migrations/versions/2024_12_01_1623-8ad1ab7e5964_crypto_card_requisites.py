"""crypto & card requisites

Revision ID: 8ad1ab7e5964
Revises: 20121434709c
Create Date: 2024-12-01 16:23:53.248583

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8ad1ab7e5964'
down_revision: Union[str, None] = '20121434709c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('requisite',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('type', postgresql.ENUM('card', 'crypto', name='requisite_type', create_type=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('card_requisite',
    sa.Column('requisite_id', sa.UUID(), nullable=False),
    sa.Column('type', postgresql.ENUM('card', 'crypto', name='requisite_type', create_type=False), server_default='card', nullable=False),
    sa.Column('number', sa.String(length=16), nullable=False),
    sa.Column('holder', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['requisite_id'], ['requisite.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('requisite_id')
    )
    op.create_table('crypto_requisite',
    sa.Column('requisite_id', sa.UUID(), nullable=False),
    sa.Column('type', postgresql.ENUM('card', 'crypto', name='requisite_type', create_type=False), server_default='crypto', nullable=False),
    sa.Column('wallet_address', sa.String(), nullable=False),
    sa.Column('network', sa.String(), nullable=False),
    sa.Column('asset', sa.String(), nullable=False),
    sa.Column('memo', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['requisite_id'], ['requisite.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('requisite_id')
    )
    op.drop_table('requisites')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('requisites',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('card', 'crypto', name='requisite_type', create_type=False), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], name='requisites_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='requisites_pkey')
    )
    op.drop_table('crypto_requisite')
    op.drop_table('card_requisite')
    op.drop_table('requisite')
    # ### end Alembic commands ###
